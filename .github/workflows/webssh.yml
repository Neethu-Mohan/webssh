name: build on change

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
  repository_dispatch:
    types: webssh

jobs:

  compare:
    runs-on: ubuntu-latest
    outputs:
      flag: ${{ steps.set-flag.outputs.flag }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm, arm64]
    steps:
      - name: checkoutrepository
        uses: actions/checkout@v2
      - name: container registries
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: compare image
        id: set-flag
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          repo="neethumohan1212/webssh-tags:${{ matrix.arch }}"
          base="neethumohan1212/alpine-tags:${{ matrix.arch }}"
          docker pull -q $base &>/dev/null
          docker pull -q $repo &>/dev/null
          #basesha=$(docker image inspect $base | jq --raw-output '.[0].RootFS.Layers|.[]')
          #reposha=$(docker image inspect $repo | jq --raw-output '.[0].RootFS.Layers|.[]')
          #echo "base sha:$basesha repo sha:$reposha"
          #[[ $reposha == *$basesha* ]] && echo "no changes" || echo "::set-output name=flag::true"

  # images:
  #   needs: compare
  #   runs-on: ubuntu-latest
  #   outputs:
  #     build: ${{ steps.set-build.outputs.build }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       arch: [amd64, arm, arm64]
  #   steps:
  #     - name: checkout repository
  #       uses: actions/checkout@v2
  #     - name: container registries
  #       run: |
  #         docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
  #         docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
  #     - name: docker image
  #       if: ${{ needs.compare.outputs.flag }}
  #       id: set-build
  #       run: |
  #         export DOCKER_CLI_EXPERIMENTAL=enabled
  #         repo="neethumohan1212/webssh:latest"
  #         image="neethumohan1212/alpine-tags:${{ matrix.arch }}""
  #         dest="$repo:${{ matrix.arch }}"
  #         date="$(date +%Y%m%d%H%M)"
  #         echo "::set-output name=build::true"
  #         docker build -t ghcr.io/$dest --build-arg IMAGE=$image . 
  #         docker tag ghcr.io/$dest docker.io/$dest
  #         docker tag ghcr.io/$dest ghcr.io/$dest-$date
  #         docker tag docker.io/$dest docker.io/$dest-$date
  #         docker push --all-tags ghcr.io/$repo
  #         docker push --all-tags docker.io/$repo
  #         docker images
  #         echo "::set-output name=build::true"

  # manifests:
  #   needs: images
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       registry: [docker.io, ghcr.io]
  #   runs-on: ubuntu-latest
  #   outputs:
  #     send: ${{ steps.set-send.outputs.send }}
  #   steps:
  #     - name: container registries
  #       run: |
  #         docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
  #         docker login docker.io -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
  #     - name: create manifests
  #       if: ${{ needs.images.outputs.build }}
  #       id: set-send
  #       run: |
  #         repo="${{ matrix.registry }}/neethumohan1212/alpine"
  #         date="$(date +%Y%m%d%H%M)"
  #         docker manifest create $repo:latest $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
  #         docker manifest create $repo:$date $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
  #         docker manifest annotate $repo:latest $repo-tags:arm --os linux --arch arm 
  #         docker manifest annotate $repo:$date $repo-tags:arm --os linux --arch arm 
  #         docker manifest inspect $repo:latest
  #         docker manifest push $repo:latest
  #         docker manifest push $repo:$date
  #         echo "::set-output name=send::true"